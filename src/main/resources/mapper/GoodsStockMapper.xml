<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wang.dao.GoodsStockMapper">
  <resultMap id="BaseResultMap" type="com.wang.pojo.GoodsStock">
    <id column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <resultMap type="com.wang.pojo.GoodsStock" id="goodsStockWithGoods">
    <id column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="goods_name" jdbcType="VARCHAR" property="goods.goodsName" />
    <result column="goods_price" jdbcType="DOUBLE" property="goods.goodsPrice" />
    <result column="input_price" jdbcType="DOUBLE" property="goods.inputPrice" />
    <result column="product_date" jdbcType="DATE" property="goods.productDate" />
    <result column="expiry_date" jdbcType="DATE" property="goods.expiryDate" />
    <result column="sup_name" jdbcType="VARCHAR" property="goods.supName" />
    <result column="goods_type" jdbcType="VARCHAR" property="goods.goodsType" />
    <result column="unit" jdbcType="VARCHAR" property="goods.unit" />
    <result column="remarks" jdbcType="VARCHAR" property="goods.remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, goods_name, number, remarks
  </sql>
  <select id="selectByExample" parameterType="com.wang.pojo.GoodsStockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from goods_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_stock
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_stock
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wang.pojo.GoodsStockExample">
    delete from goods_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wang.pojo.GoodsStock">
    insert into goods_stock (goods_id, goods_name, number, 
      remarks)
    values (#{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wang.pojo.GoodsStock">
    insert into goods_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wang.pojo.GoodsStockExample" resultType="java.lang.Long">
    select count(*) from goods_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_stock
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_stock
    set goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wang.pojo.GoodsStock">
    update goods_stock
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wang.pojo.GoodsStock">
    update goods_stock
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <select id="getAllGoodsStockInfoByCondition" resultMap="BaseResultMap">
    select * from goods_stock
    <where>
      <if test="goodsId!=null and goodsId!=''">
        and	goods_id = #{goodsId,jdbcType=INTEGER}
      </if>
      <if test="goodsName!=null and goodsName!=''">
        and goods_name like concat('%',#{goodsName},'%')
      </if>
    </where>
  </select>
  <select id="goodsStockWithGoods" resultMap="goodsStockWithGoods">
    SELECT
	g.*,
	gc.*
FROM
	goods g,
	goods_stock gc
WHERE
	g.goods_id = #{goodsId,jdbcType=INTEGER}
	AND g.goods_id = gc.goods_id
  </select>
  <select id="goodsStockWarning"  resultMap="goodsStockWithGoods">
  SELECT
	g.*,
	gc.*
FROM
	goods g,
	goods_stock gc
WHERE
	 g.goods_id = gc.goods_id and gc.number &lt; 60
	 order by number ASC
  </select>
  <select id="goodsStockDateWarning" resultMap="goodsStockWithGoods">
	SELECT
		k.goods_id,
		k.goods_name,
		k.number,
		p.goods_price,
		p.input_price,
		p.expiry_date,
		p.goods_type,
		p.sup_name,
		DATEDIFF(p.expiry_date,NOW()) as days
	FROM
		goods_stock k,
		goods p
	WHERE
		k.goods_id = p.goods_id
		AND DATEDIFF(p.expiry_date,NOW()) &lt; 60
		order by expiry_date ASC
  </select>
</mapper>